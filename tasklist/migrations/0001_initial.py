# Generated by Django 4.2.4 on 2023-09-21 03:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'In progress'), (2, 'Internal Review'), (3, 'Awaiting Approval'), (4, 'Paused'), (5, 'Canceled'), (6, 'Complete')], default=0, verbose_name='Status')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('priority', models.IntegerField(choices=[(0, 'Normal'), (1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Urgent')], default=0, verbose_name='Priority')),
                ('sort_order', models.IntegerField(blank=True, null=True, verbose_name='Order')),
                ('is_template', models.BooleanField(default=False, verbose_name='Is template')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_milestones', related_query_name='creator_of', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, verbose_name='Name')),
                ('icon', models.FileField(blank=True, null=True, upload_to='services', verbose_name='Icon')),
                ('business_analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Business Analyst')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'In progress'), (2, 'Internal Review'), (3, 'Awaiting Approval'), (4, 'Paused'), (5, 'Canceled'), (6, 'Complete')], default=0, verbose_name='Status')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('priority', models.IntegerField(choices=[(0, 'Normal'), (1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Urgent')], default=0, verbose_name='Priority')),
                ('sort_order', models.IntegerField(blank=True, null=True, verbose_name='Order')),
                ('is_system_task', models.BooleanField(default=False, verbose_name='Is System Task')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', related_query_name='creator_of', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('parent_milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', related_query_name='tasks_from_milestone', to='tasklist.milestone', verbose_name='Parent milestone')),
                ('related_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='service', to='tasklist.service', verbose_name='Service')),
                ('responsible_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', related_query_name='reponsible_to', to=settings.AUTH_USER_MODEL, verbose_name='Responsible To')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('parent_event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='project', serialize=False, to='main.event', verbose_name='Parent Event')),
                ('printer_type', models.IntegerField(choices=[(0, 'EPSON C3400'), (1, 'EPSON C3500'), (2, 'ZEBRA ZC10L'), (3, 'Primacy')], default=0, verbose_name='Printer type')),
                ('production_redwood_id', models.IntegerField(blank=True, null=True, verbose_name='Production Redwood ID')),
                ('production_show_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Production Showcode')),
                ('test_redwood_id', models.IntegerField(blank=True, null=True, verbose_name='Test Redwood ID')),
                ('test_show_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Test Showcode')),
                ('account_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_as_account_manager', to=settings.AUTH_USER_MODEL, verbose_name='Account Manager')),
                ('lead_retrieval_specialist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_as_lead_retrieval_specialist', to=settings.AUTH_USER_MODEL, verbose_name='Lead Retrieval Specialist')),
                ('project_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_as_project_manager', to=settings.AUTH_USER_MODEL, verbose_name='Project Manager')),
                ('services', models.ManyToManyField(to='tasklist.service')),
                ('solutions_specialist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_as_solutions_specialist', to=settings.AUTH_USER_MODEL, verbose_name='Solutions Specialist')),
            ],
        ),
        migrations.AddField(
            model_name='milestone',
            name='parent_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='milestones', related_query_name='milestones_from_project', to='tasklist.project', verbose_name='Parent Project'),
        ),
        migrations.AddField(
            model_name='milestone',
            name='related_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='service', to='tasklist.service', verbose_name='Service'),
        ),
        migrations.AddField(
            model_name='milestone',
            name='responsible_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_milestones', related_query_name='reponsible_to', to=settings.AUTH_USER_MODEL, verbose_name='Responsible To'),
        ),
    ]
